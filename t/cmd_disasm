#!/bin/sh

# GPL 3+ - Copyright (C) 2012  pancake

[ -e tests.sh ] && . ./tests.sh || . ../tests.sh

NAME='pd 3;?v'
FILE=-
ARGS=
CMDS='
wx 00000000000000000000
e asm.arch=x86
e asm.bits=32
pd 4 > /dev/null
?=
'
EXPECT='0x8
'
run_test

NAME='wx e9010f;?v $l'
FILE=-
ARGS=
CMDS='
wx e9010f
e asm.arch=x86
e asm.bits=16
?vi $l
pi 1
ao 1~size[1]
'
EXPECT='3
jmp 0xf04
3
'
run_test

NAME='dis-16/32/64'
FILE=-
ARGS=
CMDS='
wx e99300 e869390000 e828350000
e asm.segoff=1
e asm.bits=16
pi 1
s+3
e asm.segoff=0
e asm.bits=32
pi 1
s+5
e asm.bits=64
pi 1
'
EXPECT='jmp 0x96
call 0x3971
call 0x3535
'
run_test

# TODO test disassembler with higher offsets
#rasm2 -o 0xfffaa -d e99300 -b16
#rasm2 -o 0xb77c8192 -d 0e869390000 -b32
#rasm2 -o 0x7629523a55e3 -d e828350000 -b64

NAME='unaligned arm code'
FILE=-
ARGS=
CMDS='
wx 00000000
e asm.bits=16
e asm.arch=arm
pi 1 @ 1
'
EXPECT='unaligned
'
run_test

NAME='unaligned arm code'
FILE=-
ARGS=
CMDS='
wx 00000000
e asm.bits=32
e asm.arch=arm
pi 1 @ 2
'
EXPECT='unaligned
'
run_test

NAME='unaligned x86 issue'
FILE=-
ARGS=
CMDS='
wx 00000000
e asm.bits=16
e asm.arch=arm
pi 2
e asm.arch=x86
pi 1 @ 1
'
EXPECT='movs r0, r0
movs r0, r0
add byte [bx + si], al
'
run_test
